package

public fun box(/*0*/ a: A, /*1*/ lsOfName: kotlin.collections.List<NameCustomBox>, /*2*/ lsOfBoxedGreeters: kotlin.collections.List<BoxedGreeter>, /*3*/ lsOfGreeters: kotlin.collections.List<Greeter>, /*4*/ lsOfString: kotlin.collections.List<kotlin.String>): kotlin.Unit

public open class A : SomeK {
    public constructor A()
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    @java.lang.Override() public open override /*1*/ fun sample(/*0*/ ls: kotlin.collections.List<NameCustomBox>): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class BoxedGreeter : Greeter {
    public constructor BoxedGreeter(/*0*/ s: kotlin.String)
    public final val s: kotlin.String
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ fun greeting(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public interface Greeter {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public abstract fun greeting(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final value class NameCustomBox : Greeter {
    public constructor NameCustomBox(/*0*/ s: kotlin.String)
    public final val s: kotlin.String
    public final operator fun box(): BoxedGreeter
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ fun greeting(): kotlin.String
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
    public final operator fun unbox(/*0*/ boxed: BoxedGreeter): NameCustomBox
}

public interface SomeK {
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public abstract fun sample(/*0*/ ls: kotlin.collections.List<NameCustomBox>): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
